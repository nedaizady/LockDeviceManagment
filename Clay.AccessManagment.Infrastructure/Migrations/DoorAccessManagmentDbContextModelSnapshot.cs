// <auto-generated />
using System;
using Clay.AccessManagment.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Clay.AccessManagment.Infrastructure.Migrations
{
    [DbContext(typeof(DoorAccessManagmentDbContext))]
    partial class DoorAccessManagmentDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Clay.AccessManagment.Domain.Entities.Door", b =>
                {
                    b.Property<int>("DoorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DoorId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdentityName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("DoorId");

                    b.ToTable("Doors");
                });

            modelBuilder.Entity("Clay.AccessManagment.Domain.Entities.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FamilyName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasReportingAccess")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Clay.AccessManagment.Domain.Entities.EmployeeAccessRecord", b =>
                {
                    b.Property<long>("EmployeeAccessRecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("EmployeeAccessRecordId"));

                    b.Property<bool>("AccessStatus")
                        .HasColumnType("bit");

                    b.Property<int>("AccessTool")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DoorId")
                        .HasMaxLength(30)
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasMaxLength(30)
                        .HasColumnType("int");

                    b.HasKey("EmployeeAccessRecordId");

                    b.HasIndex("DoorId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeAccessRecords");
                });

            modelBuilder.Entity("DoorEmployee", b =>
                {
                    b.Property<int>("DoorsDoorId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeesEmployeeId")
                        .HasColumnType("int");

                    b.HasKey("DoorsDoorId", "EmployeesEmployeeId");

                    b.HasIndex("EmployeesEmployeeId");

                    b.ToTable("DoorEmployee");
                });

            modelBuilder.Entity("Clay.AccessManagment.Domain.Entities.EmployeeAccessRecord", b =>
                {
                    b.HasOne("Clay.AccessManagment.Domain.Entities.Door", "Door")
                        .WithMany("EmployeeAccessRecords")
                        .HasForeignKey("DoorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Clay.AccessManagment.Domain.Entities.Employee", "Employee")
                        .WithMany("EmployeeAccessRecords")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Door");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DoorEmployee", b =>
                {
                    b.HasOne("Clay.AccessManagment.Domain.Entities.Door", null)
                        .WithMany()
                        .HasForeignKey("DoorsDoorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Clay.AccessManagment.Domain.Entities.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeesEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Clay.AccessManagment.Domain.Entities.Door", b =>
                {
                    b.Navigation("EmployeeAccessRecords");
                });

            modelBuilder.Entity("Clay.AccessManagment.Domain.Entities.Employee", b =>
                {
                    b.Navigation("EmployeeAccessRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
